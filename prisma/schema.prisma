// Define the datasource for PostgreSQL
datasource db {
  provider     = "postgresql" // PostgreSQL database
  url          = env("DATABASE_URL") // Connection URL from the .env file
  relationMode = "prisma"
}

// Define the Prisma client generator
generator client {
  provider = "prisma-client-js"
}

// Define the User model
model User {
  id        Int      @id @default(autoincrement()) // Auto incrementing primary key
  name      String // Name field (removed incorrect @map)
  username  String   @unique // Unique username
  email     String   @unique // Unique email (added @unique constraint)
  password  String // Store the user's hashed password
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model File {
  id           String   @id @default(uuid())
  fileName     String   @unique
  originalName String?
  filePath     String   @unique
  size         Int
  type         String
  isVisible    Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  productsAsDataSheet Product[]      @relation("ProductDataSheet")
  productsAsImage     Product[]      @relation("ProductImages")
  news                News[]
  models              ProductModel[]
  carousels           Carousel[]
  productCards        ProductCard[]
  projects            Project[]
  categories          Category[]
}

model Product {
  id          String   @id @default(uuid())
  name        String   @unique
  subtitle    String
  description String
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  subCategory   SubCategory @relation(fields: [subCategoryId], references: [id])
  subCategoryId String

  tags Tag[] // Many-to-many

  models ProductModel[]

  cards ProductCard[]

  dataSheet   File?   @relation("ProductDataSheet", fields: [dataSheetId], references: [id])
  dataSheetId String?

  images File[] @relation("ProductImages")
}

model Category {
  id          String @id @default(uuid())
  name        String @unique
  slug        String 
  description String?
  isActive    Boolean @default(true)

  image       File   @relation(fields: [imageId], references: [id])
  imageId     String

  products    Product[]

  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  SubCategory SubCategory[]
}

model SubCategory {
  id          String @id @default(uuid())
  name        String @unique
  slug        String
  isActive    Boolean @default(true)

  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  String

  products    Product[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Tag {
  id          String    @id @default(uuid())
  name        String    @unique
  slug        String
  isActive    Boolean   @default(true)

  products    Product[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model News {
  id          String   @id @default(uuid())
  title       String
  description String
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  image       File   @relation(fields: [imageId], references: [id])
  imageId     String
}

model Carousel {
  id          String   @id @default(uuid())
  title       String
  subTitle    String?
  description String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  image       File   @relation(fields: [imageId], references: [id])
  imageId     String
}

model Message {
  id          String   @id @default(uuid())
  firstName   String
  lastName    String
  email       String
  phone       String
  country     String?
  message     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ProductModel {
  id          String   @id @default(uuid())
  name        String
  description String
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  image       File   @relation(fields: [imageId], references: [id])
  imageId     String

  product     Product @relation(fields: [productId], references: [id])
  productId   String
}

model ProductCard {
  id          String   @id @default(uuid())
  title       String
  description String
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  image       File   @relation(fields: [imageId], references: [id])
  imageId     String

  product     Product @relation(fields: [productId], references: [id])
  productId   String
}

model Project {
  id          String   @id @default(uuid())
  title       String
  description String
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  image       File   @relation(fields: [imageId], references: [id])
  imageId     String
}
